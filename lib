using System;
using static System.Convert;
using System.Collections;
using System.Collections.Generic;

namespace studentsLib
{
    public class Class1
    {

        public class Student
        {
            public int ids;
            public string fio;
            public int group;
            public string data;
        }
        public List<Student> s = new List<Student>();

        public string ff(string ffio)
        {
            string rf = "";
            for (int i = 0; i < ffio.Length; i++)
            {
                if (ffio[i] != ' ')
                {
                    rf += ffio[i];
                }
                else break;

            }
            return rf;
        }

        public string funkinicfio(string finfio)
        {
            string rf = "";
            string k1 = "", k2 = "";
            for (int i = 0; i < ff.Length; i++)
            {
                if (ff[i] != ' ')
                {
                    rf += ff[i];
                }
                else
                {
                    k1 += ff[i + 1];
                    i++;
                    for (int j = i; j < ff.Length; j++)
                    {
                        if (ff[j] == ' ')
                        {

                            k2 += ff[j + 1];
                            break;
                        }
                    }
                    break;
                }
            }
           rf += " " + k1.ToUpper() + "." + k2.ToUpper() + ".";
            return rf;
        }
        public void showallFIO()
        {
            foreach (var i in s)
            {
                string allf = funkinicfio(i.fio);
                Console.WriteLine(allf + "\n");
            }
        }
        public void adds(int ids, string fio, int group, string data)
        {
            s.Add(new Student() { ids = ids, fio = fio, group = group, data = data });
        }
        public void del(int ids)
        {
            for (int i = 0; i < s.Count; i++)
            {
                if (s[i].ids == ids) s.RemoveAt(i);
            }
        }
        public void izmen(int ids, string fio, int group, string data)
        {
            for (int i = 0; i < s.Count; i++)
            {
                if (s[i].ids == ids)
                {
                    s[i].fio = fio;
                    s[i].group = group;
                    s[i].data = data;
                }
            }
        }
        public void show()
        {
            foreach (var i in s)
            {
                Console.WriteLine(i.fio + "\n");
            }
        }
        public void show2()
        {
            foreach (var i in s)
            {
                Console.WriteLine(i.ids + "\n" + i.fio + "\n" + i.group + "\n" + i.data + "\n");
            }
        }
       
        public void age(int idi)
        {
            DateTime idage = ToDateTime(s[idi].data);
            DateTime now = DateTime.Today;
            int age = now.Year - idage.Year;
            if (idage > now.AddYears(-age)) age--;
            Console.WriteLine(age + " - возраст студента.");
        }
        public void age18(string s1)
        {
            foreach (var idi18 in s)
            {
                DateTime idage = ToDateTime(idi18.data);
                DateTime now = DateTime.Today;
                int age = now.Year - idage.Year;
                if (idage > now.AddYears(-age)) age--;
                if (s1 == "a")
                {
                    if (age >= 18) Console.WriteLine("\n" + idi18.ids + "\n" + idi18.fio + "\n" + idi18.group + "\n" + idi18.data + "\n");
                }
                else if (s1 == "s")
                {
                    if (age < 18) Console.WriteLine("\n" + idi18.ids + "\n" + idi18.fio + "\n" + idi18.group + "\n" + idi18.data + "\n");
                }
            }

        }
        public void poiskID(int id)
        {
            Console.WriteLine(s[id].ids + "\n" + s[id].fio + "\n" + s[id].group + "\n" + s[id].data + "\n");
        }
        public void searchFIO(string sFIO)
        {
            string tfio = "";
            foreach (var i in s)
            {
                tfio = ff(i.fio);
                if (tfio == sFIO)
                {
                    Console.WriteLine("\n" + i.ids + "\n" + i.fio + "\n" + i.group + "\n" + i.data + "\n");
                }
            }
        }
        public void inicfio(int IDs)
        {
            Console.WriteLine("\n" + funkinicfio(s[IDs].fio));
        }
    }
}
